# Docker
# Build, push an image to Azure Container Registry, and deploy to Azure Container App
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
# @author: Rajit. S

trigger:
  branches:
    include:
      - main

# Disable pull request triggers.
pr: none 

resources:
  repositories:
    - repository: self
      type: git
      ref: main

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7aa2fa93-f5d7-402d-aade-65b93cf1fbf1'
  imageRepository: 'orthelligent'
  containerRegistry: 'orthelligent.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: 'latest'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to azure container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: DeployDev
  displayName: Deployment to development
  jobs:
  - job: Deploy
    displayName: Deploy
    steps:
    - task: AzureContainerApps@0
      displayName: Deploy an image to azure container app
      inputs:
        azureSubscription: 'Pay as you go(3143f170-b1a1-4fd5-a56f-7bec1012e494)'
        acrName: 'orthelligent'
        acrUsername: 'orthelligent'
        acrPassword: '0eEGXaMovOS3ueCZJfN5hXan8EXvfCe1xKdfgJBtiT+ACRBpEdby'
        imageToDeploy: 'orthelligent.azurecr.io/orthelligent:latest'
        containerAppName: 'orthelligent'
        resourceGroup: 'Orthelligent'
        containerAppEnvironment: 'OrthelligentManagedEnvironment'
        targetPort: '80'